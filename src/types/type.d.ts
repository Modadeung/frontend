/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 유저 생성 */
        post: operations["UserController_createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/key-word": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 유저 키워드 조회 */
        get: operations["UserController_getKeyWord"];
        put?: never;
        /** 유저 키워드 생성 */
        post: operations["UserController_CreateKeyWord"];
        delete?: never;
        options?: never;
        head?: never;
        /** 유저 키워드 수정 */
        patch: operations["UserController_updateKeyWord"];
        trace?: never;
    };
    "/store": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 상점 생성 */
        post: operations["StoreController_createStore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 상점 리스트 */
        get: operations["StoreController_getStoreList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/detail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 상점 상세 */
        get: operations["StoreController_getStoreDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/reservation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 상점 예약 */
        post: operations["StoreController_reservationStore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateUserDto: {
            /**
             * @description 사용자 역할
             * @example 소상공인
             */
            role: string;
        };
        CreateUserResponseDto: {
            /**
             * @description 사용자 ID
             * @example uuid
             */
            id: string;
            /**
             * @description 사용자 역할
             * @example 소상공인
             */
            role: string;
        };
        CreateUserKeyWordDto: {
            /**
             * @description 사용자 ID
             * @example uuid
             */
            userId: string;
            /**
             * @description 키워드 리스트
             * @example [
             *       "키워드1",
             *       "키워드2"
             *     ]
             */
            keyWordList: string[];
        };
        CreateUserKeyWordResponseDto: {
            /**
             * @description 키워드 리스트
             * @example [
             *       "키워드1",
             *       "키워드2"
             *     ]
             */
            keyWordList: string[];
        };
        UpdateUserKeyWordResponseDto: {
            /**
             * @description 키워드 리스트
             * @example [
             *       "키워드1",
             *       "키워드2"
             *     ]
             */
            keyWordList: string[];
        };
        CreateStoreDto: {
            /**
             * @description 상점 이름
             * @example 편의점
             */
            name: string;
            /**
             * @description 상점 설명
             * @example 24시간 편의점
             */
            description: string;
            /**
             * @description 상점 이미지
             * @example [
             *       "https://store-image-url.com"
             *     ]
             */
            imageUrl: string[];
            /**
             * @description 별점
             * @example 4.5
             */
            scope: number;
            /**
             * @description 리뷰
             * @example 좋아요
             */
            review: string;
            /**
             * @description 최소 주문 가격
             * @example 10000
             */
            minPrice: number;
            /**
             * @description 최대 주문 가격
             * @example 60000
             */
            maxPrice: number;
            /**
             * @description 키워드
             * @example [
             *       "키워드1",
             *       "키워드2"
             *     ]
             */
            keywordList: string[];
        };
        GetStoreResponseDto: {
            /**
             * @description 상점 ID
             * @example uuid
             */
            store_id: string;
            /**
             * @description 상점 이름
             * @example 편의점
             */
            store_name: string;
            /**
             * @description 상점 설명
             * @example 24시간 편의점
             */
            store_description: string;
            /**
             * @description 최소 가격
             * @example 10000
             */
            store_min_price: number;
            /**
             * @description 최대 가격
             * @example 60000
             */
            store_max_price: number;
            /**
             * @description 상점 별점
             * @example 4.5
             */
            store_scope: number;
            /**
             * @description 상점 리뷰
             * @example 좋아요
             */
            store_review: string;
            /**
             * @description 상점 이미지 리스트
             * @example [
             *       "https://store-image-url.com"
             *     ]
             */
            imageUrlList: string[];
            /**
             * @description 키워드 리스트
             * @example [
             *       "키워드1"
             *     ]
             */
            keywordList: string[];
        };
        GetStoreDetailResponseDto: {
            /**
             * @description 상점 ID
             * @example uuid
             */
            id: string;
            /**
             * @description 상점 이름
             * @example 편의점
             */
            name: string;
            /**
             * @description 상점 설명
             * @example 24시간 편의점
             */
            description: string;
            /**
             * @description 최소 가격
             * @example 10000
             */
            minPrice: number;
            /**
             * @description 최대 가격
             * @example 60000
             */
            maxPrice: number;
            /**
             * @description 상점 별점
             * @example 4.5
             */
            scope: number;
            /**
             * @description 상점 리뷰
             * @example 좋아요
             */
            review: string;
            /**
             * @description 키워드 리스트
             * @example [
             *       "키워드1"
             *     ]
             */
            keywordList: string[];
            /**
             * @description 상점 이미지 리스트
             * @example [
             *       "https://store-image-url.com"
             *     ]
             */
            storeImageList: string[];
        };
        CreateUserReservationDto: {
            /**
             * @description 유저 아이디
             * @example uuid
             */
            userId: string;
            /**
             * @description 상점 아이디
             * @example uuid
             */
            storeId: string;
            /**
             * @description 시작 날짜
             * @example 2021-01-01
             */
            startDate: string;
            /**
             * @description 종료 날짜
             * @example 2021-01-02
             */
            endDate: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    UserController_createUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateUserResponseDto"];
                };
            };
        };
    };
    UserController_getKeyWord: {
        parameters: {
            query: {
                userId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateUserKeyWordResponseDto"];
                };
            };
        };
    };
    UserController_CreateKeyWord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserKeyWordDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_updateKeyWord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserKeyWordDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateUserKeyWordResponseDto"];
                };
            };
        };
    };
    StoreController_createStore: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateStoreDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    StoreController_getStoreList: {
        parameters: {
            query: {
                /**
                 * @description 검색 키워드
                 * @example [
                 *       "편의점",
                 *       "치킨"
                 *     ]
                 */
                keywordList: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetStoreResponseDto"][];
                };
            };
        };
    };
    StoreController_getStoreDetail: {
        parameters: {
            query: {
                storeId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetStoreDetailResponseDto"];
                };
            };
        };
    };
    StoreController_reservationStore: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserReservationDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
